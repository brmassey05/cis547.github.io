---
layout: lecture
_id: "9"
title: "Statistical Debugging"
description: |
  This module introduces a technique for automated test generation called Dynamic Symbolic Execution (DSE). DSE is an example of a hybrid analysis: it collaboratively combines static analysis and dynamic analysis. You’ll learn how it outperforms both random testing, which is based on purely dynamic analysis, and symbolic execution, which is based on purely static analysis. You’ll also learn about the effectiveness of the DSE approach in testing various real-world applications.
objectives: |
  + Understand the step-by-step process for Statistical Debugging and identify its benefits and challenges.
  + Identify the kinds of program predicates to observe in user runs for the purpose of isolating bugs.
  + Summarize the arrays of predicate counts in a user run and report them in a feedback profile.
  + Understand different approaches for sampling program predicates and the uncertainty involved in the process.
  + Compute Failure, Context and Increase metrics to express the likelihood of a bug in a predicate sample.
  + Apply Statistical Debugging algorithms to isolate bugs in programs.
slides: statistical_debugging.pdf
video: "https://youtu.be/SuleZwpoFAw"
---
